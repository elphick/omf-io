
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/100_pointset_basics.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_100_pointset_basics.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_100_pointset_basics.py:


PointSetIO Basics
=================

This example demonstrates the basic usage of the PointSetIO class.

.. GENERATED FROM PYTHON SOURCE LINES 8-19

.. code-block:: Python


    import tempfile
    from pathlib import Path

    import pandas as pd
    import geopandas as gpd
    import pyvista as pv

    from omf_io.pointset import PointSetIO
    from omf_io.reader import OMFReader








.. GENERATED FROM PYTHON SOURCE LINES 20-23

Load a PointSet
---------------
Load a point set from a OMF file

.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: Python


    pointset_io: PointSetIO = PointSetIO.from_omf(omf_input=Path('../assets/copper_deposit.omf'),
                                                  pointset_name='collar')

    pointset_io.data.head(10)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th></th>
          <th></th>
          <th>holeid</th>
          <th>holeid_color</th>
        </tr>
        <tr>
          <th>x</th>
          <th>y</th>
          <th>z</th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>445198.219</th>
          <th>494110.594</th>
          <th>3057.757537</th>
          <td>WP001</td>
          <td>(61, 255, 61)</td>
        </tr>
        <tr>
          <th>445196.625</th>
          <th>494109.656</th>
          <th>3054.265408</th>
          <td>WP002</td>
          <td>(255, 255, 96)</td>
        </tr>
        <tr>
          <th>445260.563</th>
          <th>493860.719</th>
          <th>3009.038328</th>
          <td>WP003</td>
          <td>(255, 25, 25)</td>
        </tr>
        <tr>
          <th>445203.344</th>
          <th>493720.656</th>
          <th>3033.777664</th>
          <td>WP004</td>
          <td>(255, 132, 193)</td>
        </tr>
        <tr>
          <th>445291.563</th>
          <th>493566.219</th>
          <th>2957.434730</th>
          <td>WP005</td>
          <td>(158, 255, 61)</td>
        </tr>
        <tr>
          <th>445294.031</th>
          <th>493886.813</th>
          <th>2970.848677</th>
          <td>WP006</td>
          <td>(255, 175, 96)</td>
        </tr>
        <tr>
          <th>445296.594</th>
          <th>493890.250</th>
          <th>2974.079767</th>
          <td>WP007</td>
          <td>(255, 168, 168)</td>
        </tr>
        <tr>
          <th>445460.813</th>
          <th>493321.156</th>
          <th>2979.143623</th>
          <td>WP008</td>
          <td>(96, 96, 255)</td>
        </tr>
        <tr>
          <th>445452.313</th>
          <th>493402.188</th>
          <th>2980.300987</th>
          <td>WP009</td>
          <td>(61, 61, 255)</td>
        </tr>
        <tr>
          <th>445427.219</th>
          <th>493523.688</th>
          <th>2978.657715</th>
          <td>WP010</td>
          <td>(255, 193, 132)</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 30-33

Demonstrate conversions
-----------------------
Exercise the PointSetIO class with various conversions

.. GENERATED FROM PYTHON SOURCE LINES 35-37

CSV file
~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 37-46

.. code-block:: Python


    point_data: pd.DataFrame = pointset_io.data.head(10)
    out_filepath: Path = Path(tempfile.gettempdir()) / 'pointset_data.csv'
    csv_filepath: Path = PointSetIO(data=point_data).to_csv(out_filepath)

    # read and print the csv
    csv_point_data = pd.read_csv(csv_filepath)
    csv_point_data






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>x</th>
          <th>y</th>
          <th>z</th>
          <th>holeid</th>
          <th>holeid_color</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>445198.219</td>
          <td>494110.594</td>
          <td>3057.757537</td>
          <td>WP001</td>
          <td>(61, 255, 61)</td>
        </tr>
        <tr>
          <th>1</th>
          <td>445196.625</td>
          <td>494109.656</td>
          <td>3054.265408</td>
          <td>WP002</td>
          <td>(255, 255, 96)</td>
        </tr>
        <tr>
          <th>2</th>
          <td>445260.563</td>
          <td>493860.719</td>
          <td>3009.038328</td>
          <td>WP003</td>
          <td>(255, 25, 25)</td>
        </tr>
        <tr>
          <th>3</th>
          <td>445203.344</td>
          <td>493720.656</td>
          <td>3033.777664</td>
          <td>WP004</td>
          <td>(255, 132, 193)</td>
        </tr>
        <tr>
          <th>4</th>
          <td>445291.563</td>
          <td>493566.219</td>
          <td>2957.434730</td>
          <td>WP005</td>
          <td>(158, 255, 61)</td>
        </tr>
        <tr>
          <th>5</th>
          <td>445294.031</td>
          <td>493886.813</td>
          <td>2970.848677</td>
          <td>WP006</td>
          <td>(255, 175, 96)</td>
        </tr>
        <tr>
          <th>6</th>
          <td>445296.594</td>
          <td>493890.250</td>
          <td>2974.079767</td>
          <td>WP007</td>
          <td>(255, 168, 168)</td>
        </tr>
        <tr>
          <th>7</th>
          <td>445460.813</td>
          <td>493321.156</td>
          <td>2979.143623</td>
          <td>WP008</td>
          <td>(96, 96, 255)</td>
        </tr>
        <tr>
          <th>8</th>
          <td>445452.313</td>
          <td>493402.188</td>
          <td>2980.300987</td>
          <td>WP009</td>
          <td>(61, 61, 255)</td>
        </tr>
        <tr>
          <th>9</th>
          <td>445427.219</td>
          <td>493523.688</td>
          <td>2978.657715</td>
          <td>WP010</td>
          <td>(255, 193, 132)</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 47-49

Pandas DataFrame object
~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 49-53

.. code-block:: Python


    df: pd.DataFrame = PointSetIO(data=point_data).to_pandas()
    df






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th></th>
          <th></th>
          <th>holeid</th>
          <th>holeid_color</th>
        </tr>
        <tr>
          <th>x</th>
          <th>y</th>
          <th>z</th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>445198.219</th>
          <th>494110.594</th>
          <th>3057.757537</th>
          <td>WP001</td>
          <td>(61, 255, 61)</td>
        </tr>
        <tr>
          <th>445196.625</th>
          <th>494109.656</th>
          <th>3054.265408</th>
          <td>WP002</td>
          <td>(255, 255, 96)</td>
        </tr>
        <tr>
          <th>445260.563</th>
          <th>493860.719</th>
          <th>3009.038328</th>
          <td>WP003</td>
          <td>(255, 25, 25)</td>
        </tr>
        <tr>
          <th>445203.344</th>
          <th>493720.656</th>
          <th>3033.777664</th>
          <td>WP004</td>
          <td>(255, 132, 193)</td>
        </tr>
        <tr>
          <th>445291.563</th>
          <th>493566.219</th>
          <th>2957.434730</th>
          <td>WP005</td>
          <td>(158, 255, 61)</td>
        </tr>
        <tr>
          <th>445294.031</th>
          <th>493886.813</th>
          <th>2970.848677</th>
          <td>WP006</td>
          <td>(255, 175, 96)</td>
        </tr>
        <tr>
          <th>445296.594</th>
          <th>493890.250</th>
          <th>2974.079767</th>
          <td>WP007</td>
          <td>(255, 168, 168)</td>
        </tr>
        <tr>
          <th>445460.813</th>
          <th>493321.156</th>
          <th>2979.143623</th>
          <td>WP008</td>
          <td>(96, 96, 255)</td>
        </tr>
        <tr>
          <th>445452.313</th>
          <th>493402.188</th>
          <th>2980.300987</th>
          <td>WP009</td>
          <td>(61, 61, 255)</td>
        </tr>
        <tr>
          <th>445427.219</th>
          <th>493523.688</th>
          <th>2978.657715</th>
          <td>WP010</td>
          <td>(255, 193, 132)</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 54-56

GeoPandas geodataframe object
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 56-60

.. code-block:: Python


    gdf: gpd.geodataframe = PointSetIO(data=point_data).to_geopandas()
    gdf






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>holeid</th>
          <th>holeid_color</th>
          <th>geometry</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>WP001</td>
          <td>(61, 255, 61)</td>
          <td>POINT Z (445198.219 494110.594 3057.758)</td>
        </tr>
        <tr>
          <th>1</th>
          <td>WP002</td>
          <td>(255, 255, 96)</td>
          <td>POINT Z (445196.625 494109.656 3054.265)</td>
        </tr>
        <tr>
          <th>2</th>
          <td>WP003</td>
          <td>(255, 25, 25)</td>
          <td>POINT Z (445260.563 493860.719 3009.038)</td>
        </tr>
        <tr>
          <th>3</th>
          <td>WP004</td>
          <td>(255, 132, 193)</td>
          <td>POINT Z (445203.344 493720.656 3033.778)</td>
        </tr>
        <tr>
          <th>4</th>
          <td>WP005</td>
          <td>(158, 255, 61)</td>
          <td>POINT Z (445291.563 493566.219 2957.435)</td>
        </tr>
        <tr>
          <th>5</th>
          <td>WP006</td>
          <td>(255, 175, 96)</td>
          <td>POINT Z (445294.031 493886.813 2970.849)</td>
        </tr>
        <tr>
          <th>6</th>
          <td>WP007</td>
          <td>(255, 168, 168)</td>
          <td>POINT Z (445296.594 493890.25 2974.08)</td>
        </tr>
        <tr>
          <th>7</th>
          <td>WP008</td>
          <td>(96, 96, 255)</td>
          <td>POINT Z (445460.813 493321.156 2979.144)</td>
        </tr>
        <tr>
          <th>8</th>
          <td>WP009</td>
          <td>(61, 61, 255)</td>
          <td>POINT Z (445452.313 493402.188 2980.301)</td>
        </tr>
        <tr>
          <th>9</th>
          <td>WP010</td>
          <td>(255, 193, 132)</td>
          <td>POINT Z (445427.219 493523.688 2978.658)</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 61-63

PLY file
~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 63-71

.. code-block:: Python


    ply_filepath: Path = PointSetIO(data=point_data).to_ply(out_filepath.with_suffix('.ply'), binary=False)

    # read and print the PLY using file.open
    with ply_filepath.open('r') as f:
        ply_data = f.readlines()
    print(''.join(ply_data))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ply
    format ascii 1.0
    element vertex 10
    property float x
    property float y
    property float z
    property object holeid
    property object holeid_color
    end_header
    445198.219 494110.594 3057.757537 WP001 (61, 255, 61)
    445196.625 494109.656 3054.265408 WP002 (255, 255, 96)
    445260.563 493860.719 3009.038328 WP003 (255, 25, 25)
    445203.344 493720.656 3033.777664 WP004 (255, 132, 193)
    445291.563 493566.219 2957.43473 WP005 (158, 255, 61)
    445294.031 493886.813 2970.848677 WP006 (255, 175, 96)
    445296.594 493890.25 2974.079767 WP007 (255, 168, 168)
    445460.813 493321.156 2979.143623 WP008 (96, 96, 255)
    445452.313 493402.188 2980.300987 WP009 (61, 61, 255)
    445427.219 493523.688 2978.657715 WP010 (255, 193, 132)





.. GENERATED FROM PYTHON SOURCE LINES 72-74

PyVista Polydata object
~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 74-78

.. code-block:: Python


    poly: pv.PolyData = PointSetIO(data=point_data).to_pyvista()
    poly.point_data





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    pyvista DataSetAttributes
    Association     : POINT
    Active Scalars  : None
    Active Vectors  : None
    Active Texture  : None
    Active Normals  : None
    Contains arrays :
        holeid                  <U5        (10,)
        holeid_color            <U15       (10,)



.. GENERATED FROM PYTHON SOURCE LINES 79-81

OMF file
~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 81-84

.. code-block:: Python


    omf_filepath: Path = PointSetIO(data=point_data).to_omf(element_name='collar_top_10',
                                                            output_file=out_filepath.with_suffix('.omf'))







.. GENERATED FROM PYTHON SOURCE LINES 85-86

View the OMF elements

.. GENERATED FROM PYTHON SOURCE LINES 86-89

.. code-block:: Python


    omfr: OMFReader = OMFReader(filepath=out_filepath.with_suffix('.omf'))
    omfr.element_types




.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    {'collar_top_10': 'PointSet'}




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.236 seconds)


.. _sphx_glr_download_auto_examples_100_pointset_basics.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 100_pointset_basics.ipynb <100_pointset_basics.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 100_pointset_basics.py <100_pointset_basics.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
